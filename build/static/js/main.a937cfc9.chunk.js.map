{"version":3,"sources":["pages/aboutPage.js","pages/homePage.js","components/headerComponent.js","components/gameCardComponent.js","pages/gamesPage.js","components/footerComponent.js","pages/loginPage.js","pages/registerPage.js","pages/gameDetailsPage.js","App.js","serviceWorker.js","actions/testAction.js","reducers/testReducer.js","index.js"],"names":["AboutPage","render","className","React","Component","HomePage","HeaderComponent","props","hamburgerClick","console","log","setState","prevState","dropdownVisible","to","fontSize","onClick","state","GameCard","titleLengthCheck","title","length","substring","propsObj","id","src","background_image","alt","name","rating","released","GamesPage","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","gameData","loading","nextPageUri","requestGames","uri","search","options","qs","page_size","headers","json","rp","then","data","results","next","catch","err","gameList","map","game","key","formSubmit","e","preventDefault","undefined","searchText","searchChanged","target","value","onSubmit","type","onChange","placeholder","addEventListener","this","removeEventListener","FooterComponent","LoginPage","RegisterPage","GameDetailsPage","getGameDetails","gameId","getScreenshots","screenshots","fetchPlatforms","platforms","ratingsList","item","platform","sort","a","b","toLowerCase","localeCompare","fetchGenres","genres","genresList","fetchDevelopers","developers","developerList","fetchScreenshots","image","ratings_count","href","website","description_raw","background_image_additional","location","pathname","App","exact","path","component","Boolean","hostname","match","ADD_TODO","rootReducer","combineReducers","todos","action","text","completed","store","createStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a937cfc9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass AboutPage extends React.Component{    \r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <h1>About Page</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default AboutPage;\r\n\r\n","import React from 'react';\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <h1 className=\"\">Esteem Game Utility</h1>\r\n                <p className=\"\">Esteem is a helpful game library for gamers by gamers.</p>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport VideogameAssetOutlinedIcon from '@material-ui/icons/VideogameAssetOutlined';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\n\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dropdownVisible: false\r\n        }\r\n    }\r\n\r\n    hamburgerClick = () => {\r\n        console.log('hamburger click here');\r\n        this.setState((prevState) => ({\r\n            dropdownVisible: !prevState.dropdownVisible\r\n        }));\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">\r\n                        <div className=\"logo font-24\">\r\n                            <span>eSteem</span>\r\n                            <VideogameAssetOutlinedIcon fontSize=\"large\" className=\"pl-5\" />\r\n                        </div>\r\n                    </NavLink>\r\n\r\n                    <div className=\"menu-link-div\">\r\n                        <NavLink to=\"/\" className=\"menu-bar-link\">Home</NavLink>\r\n                        <NavLink to=\"/games\" className=\"menu-bar-link\">Games</NavLink>\r\n                        <NavLink to=\"/about\" className=\"menu-bar-link\">About</NavLink>\r\n                    </div>\r\n                    <div className=\"login-div\">\r\n                        <NavLink to=\"/login\" className=\"menu-bar-link\">Login</NavLink>\r\n                    </div>\r\n                    <div className=\"hamburger-button\">\r\n                        <DehazeIcon fontSize=\"large\" className=\"pl-5\" onClick={() => this.hamburgerClick()} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={this.state.dropdownVisible ? \"dropdown-content\" : \"hide\"}>\r\n                    <NavLink to=\"/\" className=\"menu-bar-link\">Home</NavLink>\r\n                    <NavLink to=\"/games\" className=\"menu-bar-link\">Games</NavLink>\r\n                    <NavLink to=\"/about\" className=\"menu-bar-link\">About</NavLink>\r\n                    <NavLink to=\"/login\" className=\"menu-bar-link\">Login</NavLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass GameCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    titleLengthCheck = (title) => {\r\n        if (title.length >= 21) {\r\n            return (title.substring(0, 21) + \"...\");\r\n        }\r\n        else {\r\n            return title;\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <NavLink className=\"card-link\" to={'gamedetails/' + this.props.propsObj.id}>\r\n                <div className=\"gameCard\">\r\n                    <img className=\"card-img-top gameCardImg\" src={this.props.propsObj.background_image} alt=\"Card image cap\" />\r\n                    <div className=\"card-header\">\r\n                        {this.titleLengthCheck(this.props.propsObj.name)}\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"card-body-item\">\r\n                            <div className=\"\">\r\n                                <b>Rating: </b>\r\n                                <span>{this.props.propsObj.rating}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body-item\">\r\n                            <div className=\"\">\r\n                                <b>Released: </b>\r\n                                <span>{this.props.propsObj.released}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default GameCard;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport rp from 'request-promise';\r\nimport GameCard from '../components/gameCardComponent';\r\n\r\n\r\nclass GamesPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            gameData: [],\r\n            nextPageUri: null,\r\n            searchText: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: convert to redux instead of local state\r\n        window.addEventListener('scroll', this.onScroll, false);\r\n        this.requestGames(undefined, undefined);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.onScroll, false);\r\n    }\r\n\r\n    onScroll = () => {\r\n        // only run if we are right above the bottom of the screen\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500) && this.state.gameData.length && !this.state.loading) {\r\n\r\n            // if there is a next page available, query it and append results\r\n            if (this.state.nextPageUri) {\r\n                this.requestGames(this.state.nextPageUri)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * makes an API call against RAWG for games\r\n     * params = an object containing optional parameters for the api call\r\n     */\r\n    requestGames = (uri = 'https://api.rawg.io/api/games', search = '') => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        var options = {\r\n            uri: uri,\r\n            qs: {\r\n                page_size: 40,\r\n                search: search\r\n            },\r\n            headers: {},\r\n            json: true // Automatically parses the JSON string in the response\r\n        };\r\n\r\n        rp(options)\r\n            .then((data) => {\r\n                console.log('api call data: ', data);\r\n                this.setState((prevState) => ({\r\n                    gameData: [...prevState.gameData, ...data.results],\r\n                    nextPageUri: data.next\r\n                }))\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                // API call failed...\r\n                console.log('API call failed ', err);\r\n            });\r\n    }\r\n\r\n    gameList = () => {\r\n        let gameListItems = [];\r\n        if (this.state.gameData && this.state.gameData) {\r\n            gameListItems = this.state.gameData.map((game) => {\r\n                return <GameCard key={game.id} propsObj={game} />\r\n            });\r\n\r\n            return (\r\n                gameListItems\r\n            );\r\n        }\r\n        else {\r\n            return <span />\r\n        }\r\n    }\r\n\r\n    // handler for search click\r\n    formSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            gameData: []\r\n        })\r\n        this.requestGames(undefined, this.state.searchText);\r\n    }\r\n\r\n    // handler for search field change\r\n    searchChanged = (e) => {\r\n        this.setState({\r\n            searchText: e.target.value\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <form onSubmit={this.formSubmit}>\r\n                        <input type='text' className=\"search-bar\" value={this.state.searchText} onChange={this.searchChanged}\r\n                            placeholder=\"Search for a game...\" />\r\n                        <button type=\"submit\" className=\"search-bar-button\">Search</button>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"card-deck\">\r\n                    {this.gameList()}\r\n                </div>\r\n\r\n                {this.state.loading ? <div className=\"text-center\"><br></br><h2>Loading...</h2></div> : <span></span>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GamesPage;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n               <div className=\"\">\r\n                    \r\n               </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default FooterComponent;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nclass LoginPage extends React.Component{    \r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <h1>You must purchase the Login DLC in order to login!</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n","import React from 'react';\r\n\r\nclass RegisterPage extends React.Component{    \r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>this is the register page!</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default RegisterPage;\r\n\r\n","import React from 'react';\r\nimport rp from 'request-promise';\r\n\r\nclass GameDetailsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gameId: this.props.location.pathname.substring(13),\r\n            gameData: [],\r\n            screenshots: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGameDetails();\r\n        this.getScreenshots();\r\n    }\r\n\r\n    // makes api call for game details\r\n    getGameDetails = () => {\r\n        var options = {\r\n            uri: 'https://api.rawg.io/api/games/' + this.state.gameId,\r\n            qs: {},\r\n            headers: {},\r\n            json: true // Automatically parses the JSON string in the response\r\n        };\r\n\r\n        rp(options)\r\n            .then((data) => {\r\n                console.log('api call data: ', data);\r\n                this.setState({\r\n                    gameData: data\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                // API call failed...\r\n                console.log('API call failed ', err);\r\n            });\r\n    }\r\n\r\n    // makes an api call to get screenshots for this game\r\n    getScreenshots = () => {\r\n        // api call\r\n        var options = {\r\n            uri: 'https://api.rawg.io/api/games/' + this.state.gameId + '/screenshots',\r\n            qs: {},\r\n            headers: {},\r\n            json: true // Automatically parses the JSON string in the response\r\n        };\r\n\r\n        rp(options)\r\n            .then((data) => {\r\n                console.log('screenshot api data: ', data);\r\n\r\n                this.setState({\r\n                    screenshots: data.results\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                // screenshot API call failed...\r\n                console.log('API call failed ', err);\r\n            });\r\n    }\r\n\r\n    // pull platforms\r\n    fetchPlatforms = () => {\r\n        if (this.state.gameData && this.state.gameData.platforms) {\r\n            let ratingsList = this.state.gameData.platforms.map((item) => {\r\n                return item.platform.name\r\n            })\r\n\r\n            // sort array of strings\r\n            ratingsList.sort(function (a, b) {\r\n                return a.toLowerCase().localeCompare(b.toLowerCase())\r\n            });\r\n\r\n            // add strings into divs\r\n            let formattedRatings = ratingsList.map((item) => {\r\n                return <li key={item}>{item}</li>\r\n            });\r\n\r\n            // return formatted list\r\n            return formattedRatings;\r\n\r\n        }\r\n    }\r\n\r\n    // pull genres\r\n    fetchGenres = () => {\r\n        if (this.state.gameData && this.state.gameData.genres) {\r\n            let genresList = this.state.gameData.genres.map((item) => {\r\n                return item.name\r\n            })\r\n\r\n            // sort array of strings\r\n            genresList.sort(function (a, b) {\r\n                return a.toLowerCase().localeCompare(b.toLowerCase())\r\n            });\r\n\r\n            // add strings into divs\r\n            let formattedGenres = genresList.map((item) => {\r\n                return <li key={item}>{item}</li>\r\n            });\r\n\r\n            // return formatted list\r\n            return formattedGenres;\r\n        }\r\n    }\r\n\r\n    // pull genres\r\n    fetchDevelopers = () => {\r\n        if (this.state.gameData && this.state.gameData.developers) {\r\n            let developerList = this.state.gameData.developers.map((item) => {\r\n                return item.name\r\n            })\r\n\r\n            // sort array of strings\r\n            developerList.sort(function (a, b) {\r\n                return a.toLowerCase().localeCompare(b.toLowerCase())\r\n            });\r\n\r\n            // add strings into divs\r\n            let formattedDevelopers = developerList.map((item) => {\r\n                return <li key={item}>{item}</li>\r\n            });\r\n\r\n            // return formatted list\r\n            return formattedDevelopers;\r\n        }\r\n    }\r\n\r\n    // pull screenshots\r\n    fetchScreenshots = () => {\r\n        if (this.state.screenshots && this.state.screenshots.length > 0) {\r\n            let screenshotList = this.state.screenshots.map((item) => {\r\n                return <img className=\"small-details-img\" key={item.id} src={item.image}></img>\r\n            })\r\n\r\n            // return formatted list\r\n            return screenshotList;\r\n        }\r\n    }\r\n\r\n    // developers, genres, tags\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <div className=\"gameTitle\">{this.state.gameData.name}</div>\r\n                <div className=\"columnWrapper\">\r\n                    <div className=\"detailsLeftCol\">\r\n                        <div className=\"section-heading\">Rating</div>\r\n                        <div className=\"horizontal-display\">\r\n                            <div>\r\n                                <b>Rating:</b> {this.state.gameData.rating}\r\n                            </div>\r\n                            <div>\r\n                                <b>Ratings Count:</b> {this.state.gameData.ratings_count}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Genres</div>\r\n                        <div>\r\n                            <ul className=\"content-list\">\r\n                                {this.fetchGenres()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Platforms</div>\r\n                        <div>\r\n                            <ul className=\"content-list\">\r\n                                {this.fetchPlatforms()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Developers</div>\r\n                        <div>\r\n                            <ul className=\"content-list\">\r\n                                {this.fetchDevelopers()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Other</div>\r\n                        <div className=\"horizontal-display\">\r\n                            <div>\r\n                                <b>Release Date:</b> {this.state.gameData.released}\r\n                            </div>\r\n                            <div>\r\n                                <b>Website:</b> <a href={this.state.gameData.website}>Game Site</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"section-heading\">Description</div>\r\n                        {this.state.gameData.description_raw}\r\n                    </div>\r\n                    <div className=\"detailsRightCol\">\r\n                        <img className=\"details-img\" src={this.state.gameData.background_image}></img>\r\n                        \r\n                        {this.state.gameData.background_image_additional ?\r\n                            <img className=\"details-img \" src={this.state.gameData.background_image_additional} />\r\n                            : <span></span>\r\n                        }\r\n                        \r\n                        <div className=\"small-image-wrapper\">\r\n                            {this.fetchScreenshots()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default GameDetailsPage;\r\n\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport AboutPage from './pages/aboutPage';\r\nimport HomePage from './pages/homePage';\r\nimport HeaderComponent from './components/headerComponent';\r\nimport GamesPage from './pages/gamesPage';\r\nimport FooterComponent from './components/footerComponent';\r\nimport LoginPage from './pages/loginPage';\r\nimport RegisterPage from './pages/registerPage';\r\nimport GameDetailsPage from './pages/gameDetailsPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HeaderComponent />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/games\" component={GamesPage} />\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegisterPage} />\r\n        <Route path=\"/gamedetails\" component={GameDetailsPage} />\r\n      </Switch>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_TODO = 'ADD_TODO'\r\n\r\n\r\nexport function addTodo(text) {\r\n    return { type: ADD_TODO, text }\r\n  }\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  ADD_TODO,\r\n} from '../actions/testAction'\r\n\r\nfunction todos(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst rootReducer = combineReducers({\r\n  todos\r\n})\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux'\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/testReducer';\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    \r\n, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}