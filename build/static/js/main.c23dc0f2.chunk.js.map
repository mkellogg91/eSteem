{"version":3,"sources":["pages/aboutPage.js","pages/homePage.js","components/headerComponent.js","components/gameCardComponent.js","pages/gamesPage.js","components/footerComponent.js","pages/loginPage.js","pages/registerPage.js","pages/gameDetailsPage.js","App.js","serviceWorker.js","reducers/testReducer.js","actions/testAction.js","index.js"],"names":["AboutPage","render","className","React","Component","HeaderComponent","props","hamburgerClick","console","log","setState","prevState","dropdownVisible","to","fontSize","onClick","state","GameCard","titleLengthCheck","title","length","substring","propsObj","id","src","background_image","alt","name","rating","released","GamesPage","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","gameData","loading","nextPageUri","requestGames","uri","search","options","qs","key","RAPI","page_size","headers","json","rp","then","data","results","next","catch","err","gameList","map","game","formSubmit","e","preventDefault","undefined","searchText","searchChanged","target","value","onSubmit","type","onChange","placeholder","this","process","addEventListener","removeEventListener","FooterComponent","LoginPage","RegisterPage","GameDetailsPage","getGameDetails","gameId","getScreenshots","screenshots","fetchPlatforms","platforms","ratingsList","item","platform","sort","a","b","toLowerCase","localeCompare","fetchGenres","genres","genresList","fetchDevelopers","developers","developerList","fetchScreenshots","image","showMoreHandler","showMoreToggle","showLessHandler","descriptionRenderer","shortDesc","description_raw","ratings_count","href","website","background_image_additional","location","pathname","App","exact","path","component","Boolean","hostname","match","rootReducer","combineReducers","todos","action","text","completed","store","createStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c23dc0f2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass AboutPage extends React.Component{    \r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <h1 className=\"\">Esteem Game Utility</h1>\r\n                <p className=\"\">Esteem is a helpful game library for gamers by gamers.</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default AboutPage;\r\n\r\n","import React from 'react';\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <h1 className=\"\">Esteem Game Utility</h1>\r\n                <p className=\"\">Esteem is a helpful game library for gamers by gamers.</p>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport VideogameAssetOutlinedIcon from '@material-ui/icons/VideogameAssetOutlined';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\n\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dropdownVisible: false\r\n        }\r\n    }\r\n\r\n    hamburgerClick = () => {\r\n        console.log('hamburger click here');\r\n        this.setState((prevState) => ({\r\n            dropdownVisible: !prevState.dropdownVisible\r\n        }));\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">\r\n                        <div className=\"logo font-24\">\r\n                            <span>eSteem</span>\r\n                            <VideogameAssetOutlinedIcon fontSize=\"large\" className=\"pl-5\" />\r\n                        </div>\r\n                    </NavLink>\r\n\r\n                    <div className=\"menu-link-div\">\r\n                        <NavLink to=\"/\" className=\"menu-bar-link\">Home</NavLink>\r\n                        <NavLink to=\"/about\" className=\"menu-bar-link\">About</NavLink>\r\n                    </div>\r\n                    <div className=\"login-div\">\r\n                        <NavLink to=\"/login\" className=\"menu-bar-link\">Login</NavLink>\r\n                    </div>\r\n                    <div className=\"hamburger-button\">\r\n                        <DehazeIcon fontSize=\"large\" className=\"pl-5\" onClick={() => this.hamburgerClick()} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={this.state.dropdownVisible ? \"dropdown-content\" : \"hide\"}>\r\n                    <NavLink to=\"/\" className=\"menu-bar-link\">Home</NavLink>\r\n                    <NavLink to=\"/about\" className=\"menu-bar-link\">About</NavLink>\r\n                    <NavLink to=\"/login\" className=\"menu-bar-link\">Login</NavLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass GameCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    titleLengthCheck = (title) => {\r\n        if (title.length >= 21) {\r\n            return (title.substring(0, 21) + \"...\");\r\n        }\r\n        else {\r\n            return title;\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <NavLink className=\"card-link\" to={'gamedetails/' + this.props.propsObj.id}>\r\n                <div className=\"gameCard\">\r\n                    <img className=\"card-img-top gameCardImg\" src={this.props.propsObj.background_image} alt=\"Card image cap\" />\r\n                    <div className=\"card-header\">\r\n                        {this.titleLengthCheck(this.props.propsObj.name)}\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"card-body-item\">\r\n                            <div className=\"\">\r\n                                <b>Rating: </b>\r\n                                <span>{this.props.propsObj.rating}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body-item\">\r\n                            <div className=\"\">\r\n                                <b>Released: </b>\r\n                                <span>{this.props.propsObj.released}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default GameCard;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport rp from 'request-promise';\r\nimport GameCard from '../components/gameCardComponent';\r\n\r\n\r\nclass GamesPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            gameData: [],\r\n            nextPageUri: null,\r\n            searchText: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // TODO: convert to redux instead of local state\r\n        this.RAPI = process.env.RAPI\r\n        window.addEventListener('scroll', this.onScroll, false);\r\n        this.requestGames(undefined, undefined);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.onScroll, false);\r\n    }\r\n\r\n    onScroll = () => {\r\n        // only run if we are right above the bottom of the screen\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500) && this.state.gameData.length && !this.state.loading) {\r\n\r\n            // if there is a next page available, query it and append results\r\n            if (this.state.nextPageUri) {\r\n                this.requestGames(this.state.nextPageUri)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * makes an API call against RAWG for games\r\n     * params = an object containing optional parameters for the api call\r\n     */\r\n    requestGames = (uri = 'https://api.rawg.io/api/games', search = '') => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        var options = {\r\n            uri: uri,\r\n            qs: {\r\n                key: this.RAPI,\r\n                page_size: 40,\r\n                search: search\r\n            },\r\n            headers: {},\r\n            json: true // Automatically parses the JSON string in the response\r\n        };\r\n\r\n        rp(options)\r\n            .then((data) => {\r\n                console.log('api call data: ', data);\r\n                this.setState((prevState) => ({\r\n                    gameData: [...prevState.gameData, ...data.results],\r\n                    nextPageUri: data.next\r\n                }))\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                // API call failed...\r\n                console.log('API call failed ', err);\r\n            });\r\n    }\r\n\r\n    gameList = () => {\r\n        let gameListItems = [];\r\n        if (this.state.gameData && this.state.gameData) {\r\n            gameListItems = this.state.gameData.map((game) => {\r\n                return <GameCard key={game.id} propsObj={game} />\r\n            });\r\n\r\n            return (\r\n                gameListItems\r\n            );\r\n        }\r\n        else {\r\n            return <span />\r\n        }\r\n    }\r\n\r\n    // handler for search click\r\n    formSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            gameData: []\r\n        })\r\n        this.requestGames(undefined, this.state.searchText);\r\n    }\r\n\r\n    // handler for search field change\r\n    searchChanged = (e) => {\r\n        this.setState({\r\n            searchText: e.target.value\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <form onSubmit={this.formSubmit}>\r\n                        <input type='text' className=\"search-bar\" value={this.state.searchText} onChange={this.searchChanged}\r\n                            placeholder=\"Search for a game...\" />\r\n                        <button type=\"submit\" className=\"search-bar-button\">Search</button>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"card-deck\">\r\n                    {this.gameList()}\r\n                </div>\r\n\r\n                {this.state.loading ? <div className=\"text-center\"><br></br><h2>Loading...</h2></div> : <span></span>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GamesPage;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass FooterComponent extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n               <div className=\"\">\r\n                    \r\n               </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default FooterComponent;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nclass LoginPage extends React.Component{    \r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <h1>You must purchase the Login DLC in order to login!</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n","import React from 'react';\r\n\r\nclass RegisterPage extends React.Component{    \r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>this is the register page!</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default RegisterPage;\r\n\r\n","import React from 'react';\r\nimport rp from 'request-promise';\r\n\r\nclass GameDetailsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gameId: this.props.location.pathname.substring(13),\r\n            gameData: [],\r\n            screenshots: [],\r\n            showMoreToggle: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.RAPI = process.env.RAPI\r\n        this.getGameDetails();\r\n        this.getScreenshots();\r\n    }\r\n\r\n    // makes api call for game details\r\n    getGameDetails = () => {\r\n        var options = {\r\n            uri: 'https://api.rawg.io/api/games/' + this.state.gameId,\r\n            qs: {\r\n                key: this.RAPI\r\n            },\r\n            headers: {},\r\n            json: true // Automatically parses the JSON string in the response\r\n        };\r\n\r\n        rp(options)\r\n            .then((data) => {\r\n                console.log('api call data: ', data);\r\n                this.setState({\r\n                    gameData: data\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                // API call failed...\r\n                console.log('API call failed ', err);\r\n            });\r\n    }\r\n\r\n    // makes an api call to get screenshots for this game\r\n    getScreenshots = () => {\r\n        // api call\r\n        var options = {\r\n            uri: 'https://api.rawg.io/api/games/' + this.state.gameId + '/screenshots',\r\n            qs: {\r\n                key: this.RAPI\r\n            },\r\n            headers: {},\r\n            json: true // Automatically parses the JSON string in the response\r\n        };\r\n\r\n        rp(options)\r\n            .then((data) => {\r\n                console.log('screenshot api data: ', data);\r\n\r\n                this.setState({\r\n                    screenshots: data.results\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                // screenshot API call failed...\r\n                console.log('API call failed ', err);\r\n            });\r\n    }\r\n\r\n    // pull platforms\r\n    fetchPlatforms = () => {\r\n        if (this.state.gameData && this.state.gameData.platforms) {\r\n            let ratingsList = this.state.gameData.platforms.map((item) => {\r\n                return item.platform.name\r\n            })\r\n\r\n            // sort array of strings\r\n            ratingsList.sort(function (a, b) {\r\n                return a.toLowerCase().localeCompare(b.toLowerCase())\r\n            });\r\n\r\n            // add strings into divs\r\n            let formattedRatings = ratingsList.map((item) => {\r\n                return <li key={item}>{item}</li>\r\n            });\r\n\r\n            // return formatted list\r\n            return formattedRatings;\r\n\r\n        }\r\n    }\r\n\r\n    // pull genres\r\n    fetchGenres = () => {\r\n        if (this.state.gameData && this.state.gameData.genres) {\r\n            let genresList = this.state.gameData.genres.map((item) => {\r\n                return item.name\r\n            })\r\n\r\n            // sort array of strings\r\n            genresList.sort(function (a, b) {\r\n                return a.toLowerCase().localeCompare(b.toLowerCase())\r\n            });\r\n\r\n            // add strings into divs\r\n            let formattedGenres = genresList.map((item) => {\r\n                return <li key={item}>{item}</li>\r\n            });\r\n\r\n            // return formatted list\r\n            return formattedGenres;\r\n        }\r\n    }\r\n\r\n    // pull genres\r\n    fetchDevelopers = () => {\r\n        if (this.state.gameData && this.state.gameData.developers) {\r\n            let developerList = this.state.gameData.developers.map((item) => {\r\n                return item.name\r\n            })\r\n\r\n            // sort array of strings\r\n            developerList.sort(function (a, b) {\r\n                return a.toLowerCase().localeCompare(b.toLowerCase())\r\n            });\r\n\r\n            // add strings into divs\r\n            let formattedDevelopers = developerList.map((item) => {\r\n                return <li key={item}>{item}</li>\r\n            });\r\n\r\n            // return formatted list\r\n            return formattedDevelopers;\r\n        }\r\n    }\r\n\r\n    // pull screenshots\r\n    fetchScreenshots = () => {\r\n        if (this.state.screenshots && this.state.screenshots.length > 0) {\r\n            let screenshotList = this.state.screenshots.map((item) => {\r\n                return <img className=\"small-details-img\" key={item.id} src={item.image}></img>\r\n            })\r\n\r\n            // return formatted list\r\n            return screenshotList;\r\n        }\r\n    }\r\n\r\n    // when show more is clicked\r\n    showMoreHandler = () => {\r\n        this.setState({\r\n            showMoreToggle: true\r\n        })\r\n    }\r\n\r\n    // when show less is clicked\r\n    showLessHandler = () => {\r\n        this.setState({\r\n            showMoreToggle: false\r\n        })\r\n    }\r\n\r\n    // decides what to show in description\r\n    descriptionRenderer = () => {\r\n        let shortDesc = '';\r\n\r\n        // dont run anything until state is populated\r\n        if (this.state.gameData && this.state.gameData.description_raw) {\r\n            // if the description is already very short just show without any buttons\r\n            if (this.state.gameData.description_raw && this.state.gameData.description_raw.length <= 300) {\r\n                shortDesc = this.state.gameData.description_raw;\r\n                return (\r\n                    <span>{shortDesc}</span>\r\n                )\r\n            }\r\n\r\n            // show all text\r\n            if (this.state.showMoreToggle) {\r\n                return (\r\n                    <div>\r\n                        <span>{this.state.gameData.description_raw}</span>\r\n                        <div className=\"description-button-wrapper\">\r\n                            <button className=\"description-show-button\" onClick={() => this.showLessHandler()}>show less</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            // show shortened text\r\n            else {\r\n                shortDesc = this.state.gameData.description_raw.substring(0, 300) + '...';\r\n\r\n                return (\r\n                    <div>\r\n                        <span>{shortDesc}</span>\r\n                        <div className=\"description-button-wrapper\">\r\n                            <button className=\"description-show-button\" onClick={() => this.showMoreHandler()}>show more</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    // developers, genres, tags\r\n    render = () => {\r\n        return (\r\n            <div className=\"container homePageJumbo\">\r\n                <div className=\"gameTitle\">{this.state.gameData.name}</div>\r\n                <div className=\"columnWrapper\">\r\n                    <div className=\"detailsLeftCol\">\r\n                        <div className=\"section-heading\">Rating</div>\r\n                        <div className=\"horizontal-display\">\r\n                            <div>\r\n                                <b>Rating:</b> {this.state.gameData.rating}\r\n                            </div>\r\n                            <div>\r\n                                <b>Ratings Count:</b> {this.state.gameData.ratings_count}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Genres</div>\r\n                        <div>\r\n                            <ul className=\"content-list\">\r\n                                {this.fetchGenres()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Platforms</div>\r\n                        <div>\r\n                            <ul className=\"content-list\">\r\n                                {this.fetchPlatforms()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Developers</div>\r\n                        <div>\r\n                            <ul className=\"content-list\">\r\n                                {this.fetchDevelopers()}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"section-heading\">Other</div>\r\n                        <div className=\"horizontal-display\">\r\n                            <div>\r\n                                <b>Release Date:</b> {this.state.gameData.released}\r\n                            </div>\r\n                            <div>\r\n                                <b>Website:</b> <a href={this.state.gameData.website}>Game Site</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"section-heading\">Description</div>\r\n                        {this.descriptionRenderer()}\r\n                    </div>\r\n                    <div className=\"detailsRightCol\">\r\n                        <img className=\"details-img\" src={this.state.gameData.background_image}></img>\r\n\r\n                        {this.state.gameData.background_image_additional ?\r\n                            <img className=\"details-img \" src={this.state.gameData.background_image_additional} />\r\n                            : <span></span>\r\n                        }\r\n\r\n                        <div className=\"small-image-wrapper\">\r\n                            {this.fetchScreenshots()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default GameDetailsPage;\r\n\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport AboutPage from './pages/aboutPage';\r\nimport HomePage from './pages/homePage';\r\nimport HeaderComponent from './components/headerComponent';\r\nimport GamesPage from './pages/gamesPage';\r\nimport FooterComponent from './components/footerComponent';\r\nimport LoginPage from './pages/loginPage';\r\nimport RegisterPage from './pages/registerPage';\r\nimport GameDetailsPage from './pages/gameDetailsPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HeaderComponent />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={GamesPage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegisterPage} />\r\n        <Route path=\"/gamedetails\" component={GameDetailsPage} />\r\n      </Switch>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  ADD_TODO,\r\n} from '../actions/testAction'\r\n\r\nfunction todos(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst rootReducer = combineReducers({\r\n  todos\r\n})\r\nexport default rootReducer","export const ADD_TODO = 'ADD_TODO'\r\n\r\n\r\nexport function addTodo(text) {\r\n    return { type: ADD_TODO, text }\r\n  }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux'\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/testReducer';\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    \r\n, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}